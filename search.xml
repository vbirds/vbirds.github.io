<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[位运算]]></title>
      <url>http://yoursite.com/2016/05/24/%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      <content type="html"><![CDATA[<p>二进制位<br>一个字节由8个位组成<br><figure class="highlight plain"><figcaption><span>0000  : 0 (OX00)```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">```0000 0001  : 1 (OX01)``` </span><br><span class="line">```0000 0010  : 2 (OX02)``` </span><br><span class="line">```0000 0011  : 3 (OX03)``` </span><br><span class="line">```0000 0100  : 4 (OX04)``` </span><br><span class="line"></span><br><span class="line">## 二进制的操作</span><br><span class="line"></span><br><span class="line">### 位移</span><br><span class="line">一个 `unsigned char` 由一个字节构成。</span><br><span class="line">**左移运算**：`X&lt;&lt;Y`：</span><br><span class="line">&gt; 将x左移y位，将x最左边的y位丢弃，在右边补y个0。</span><br><span class="line"></span><br><span class="line">**右移运算**：`X&gt;&gt;Y`：</span><br><span class="line">&gt; 将x右移y位，这需要区分x是有符号数还是无符号数。在x是无符号数时，只需将x的最右边的y位丢弃，在左边补上y个0。在x是有符号数时，又分为x是正数还是负数。正数时，同无符号数的处理相同；负数时，将将x的最右边的y位丢弃，在左边补上y个1。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**左移1位**：相当于 乘2</span><br><span class="line">**右移1位**：相当于 除2</span><br><span class="line">要注意可能 溢出 的情况</span><br><span class="line"></span><br><span class="line">优点：移位运算 比 乘除运算 速度更快 更省CPU</span><br><span class="line">```cpp</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    // 0001 0011</span><br><span class="line">    // 1    3</span><br><span class="line">    // 0x13</span><br><span class="line">    // 16 * 1 + 2 + 1</span><br><span class="line"></span><br><span class="line">    unsigned char a = 0x13; // 0001 0011</span><br><span class="line">    unsigned char b = a &lt;&lt; 2; // 0100 1100</span><br><span class="line"></span><br><span class="line">    unsigned char c = b &gt;&gt; 2; // 0001 0011</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="按位与运算符-amp"><a href="#按位与运算符-amp" class="headerlink" title="按位与运算符 &amp;"></a>按位与运算符 &amp;</h3><blockquote>
<p>按位与运算符”&amp;”是双目运算符。 其功能是参与运算的两数各对应的二进位相与。只有对应的两个二进位均为1时，结果位才为1，否则为0。参与运算的数以补码方式出现。</p>
</blockquote>
<p>例如：<code>9&amp;5</code>可写算式如下： <code>00001001 &amp; 00000101 = 00000001</code>可见<code>9&amp;5=1</code>。 按位与运算<strong>通常用来对某些位清0或保留某些位</strong>。例如把a 的高八位清 0 ， 保留低八位， 可作 <code>a&amp;255</code> 运算 ( 255 的二进制数为11111111)。<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>&amp; <span class="number">1</span> = <span class="number">1</span>， <span class="number">1</span> | <span class="number">1</span> = <span class="number">1</span>， <span class="number">1</span> ^ <span class="number">1</span> = <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span>&amp; <span class="number">0</span> = <span class="number">0</span>， <span class="number">1</span> | <span class="number">0</span> = <span class="number">1</span>， <span class="number">1</span> ^ <span class="number">0</span> = <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span>&amp; <span class="number">1</span> = <span class="number">0</span>， <span class="number">0</span> | <span class="number">1</span> = <span class="number">1</span>， <span class="number">0</span> ^ <span class="number">1</span> = <span class="number">1</span></span><br><span class="line"><span class="symbol">0 </span>&amp; <span class="number">0</span> = <span class="number">0</span>， <span class="number">0</span> | <span class="number">0</span> = <span class="number">0</span>， <span class="number">0</span> ^ <span class="number">0</span> = <span class="number">0</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    inta=<span class="number">9</span>,b=<span class="number">5</span>,c;</span><br><span class="line">    c=a&amp;b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"a=%d\nb=%d\nc=%d\n"</span>,a,b,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="按位或运算符"><a href="#按位或运算符" class="headerlink" title="按位或运算符 |"></a>按位或运算符 |</h3><blockquote>
<p>按位或运算符“|”是双目运算符。其功能是参与运算的两数各对应的二进位相或。只要对应的二个二进位有一个为1时，结果位就为1。</p>
</blockquote>
<p><strong>按位或运算常用来对一个数据的某些位定值为1</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">240</span> <span class="comment">// 1111 0000</span></span><br><span class="line">    <span class="keyword">int</span> pnum = <span class="number">15</span> <span class="comment">// 0000 1111</span></span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>; <span class="comment">// 0000 0000</span></span><br><span class="line">    </span><br><span class="line">    temp = num | pnum <span class="comment">//1111 1111 (255)</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, temp); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="异或运算符"><a href="#异或运算符" class="headerlink" title="异或运算符 ^"></a>异或运算符 ^</h3><blockquote>
<p>　异或运算符 <code>^</code> 也称 <code>XOR</code> 运算符。它的规则是若参加运算的两个二进位同号，则结果为0，异号则为1。即 <code>0^0=0; 0^1=1; 1^0=1;1^1=0</code>。</p>
</blockquote>
<ol>
<li><p>使特定位翻转<br>假设有 <code>01111010</code>，想使其低4 位翻转，即 1 变为 0，0 变为 1，可以将它与 <code>00001111</code>进行 <code>^</code> 运算</p>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">01111010</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">00001111 </span>^</span><br><span class="line"></span><br><span class="line"><span class="number">01110101</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>与 0 相 ^ 保留原值</p>
<figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00001010</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">00000000 </span>^</span><br><span class="line"></span><br><span class="line"><span class="number">00001010</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>交换两个值，不用临时变量<br>假如 a = 3, b = 4。想将 a 和 b的值互换，可以用以下赋值语句实现：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">a</span> = a ^ b;</span><br><span class="line"></span><br><span class="line"><span class="attr">b</span> = b ^ a;</span><br><span class="line"></span><br><span class="line"><span class="attr">a</span> = a ^ b;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="按位取反"><a href="#按位取反" class="headerlink" title="按位取反 ~"></a>按位取反 ~</h3><blockquote>
<p>  按位取反运算是单目运算，用来求一个位串信息按位的反，即哪些为0的位，结果是1，而哪些为1的位，结果是0。例如, <code>~7</code>的结果为<code>0xfff8</code>。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">int</span> a=<span class="number">077</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%d"</span>,~a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="计算技巧"><a href="#计算技巧" class="headerlink" title="计算技巧"></a>计算技巧</h3><h4 id="检查state的第pos位是否为1"><a href="#检查state的第pos位是否为1" class="headerlink" title="检查state的第pos位是否为1"></a>检查state的第pos位是否为1</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitCheck</span><span class="params">(<span class="keyword">int</span> state, <span class="keyword">int</span> pos)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> state &amp; <span class="number">1</span>&lt;&lt; pos - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="将state的第pos位的值设为1"><a href="#将state的第pos位的值设为1" class="headerlink" title="将state的第pos位的值设为1"></a>将state的第pos位的值设为1</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitAdd</span><span class="params">(<span class="keyword">int</span> state, <span class="keyword">int</span> pos)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> state | (<span class="number">1</span> &lt;&lt; (pos - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="将state的第pos位的值设为0"><a href="#将state的第pos位的值设为0" class="headerlink" title="将state的第pos位的值设为0"></a>将state的第pos位的值设为0</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bitDel</span><span class="params">(<span class="keyword">int</span> state, <span class="keyword">int</span> pos)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> state &amp; (~(<span class="number">1</span> &lt;&lt; (pos - <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="计算一个数的二进制中1的个数"><a href="#计算一个数的二进制中1的个数" class="headerlink" title="计算一个数的二进制中1的个数"></a>计算一个数的二进制中1的个数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countof1</span><span class="params">(<span class="keyword">int</span> num)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> flag = <span class="number">1</span> <span class="comment">//0x01  0000 0001</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (flag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num &amp; flag)</span><br><span class="line">        &#123;</span><br><span class="line">            ++count;</span><br><span class="line">        &#125;</span><br><span class="line">        flag = flag &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="判断一个数是否是2的n次方"><a href="#判断一个数是否是2的n次方" class="headerlink" title="判断一个数是否是2的n次方"></a>判断一个数是否是2的n次方</h4><p>一个数是2的n次方，则这个数的最高位是1，其余位为0。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    判断一个数是否为2的n次方（一个数为2的n次方，则最高位为1，其余位为0） </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is2Power</span><span class="params">(<span class="keyword">int</span> num)</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;  </span><br><span class="line">  </span><br><span class="line">    num = num &amp; (num - <span class="number">1</span>); <span class="comment">//计算num和num - 1的与的结果  </span></span><br><span class="line">    <span class="keyword">if</span>(num) <span class="comment">//如果结果为0，则不是2的n次方  </span></span><br><span class="line">    &#123;  </span><br><span class="line">        flag = <span class="literal">false</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">return</span> flag;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="整数n经过多少步可以变为整数m"><a href="#整数n经过多少步可以变为整数m" class="headerlink" title="整数n经过多少步可以变为整数m"></a>整数n经过多少步可以变为整数m</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    求解n变化为m，需要进行的操作步数 </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">countChange</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    n = n ^ m; <span class="comment">//求n和m的异或,再计算结果中1的个数  </span></span><br><span class="line">    <span class="keyword">return</span> countOf1_2(n);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="获得最大的int值"><a href="#获得最大的int值" class="headerlink" title="获得最大的int值"></a>获得最大的int值</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    获取最大的int </span><br><span class="line">    得到结果：2147483647 </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMaxInt</span><span class="params">()</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> (<span class="number">1</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="获得最小的int值"><a href="#获得最小的int值" class="headerlink" title="获得最小的int值"></a>获得最小的int值</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    求最小int </span><br><span class="line">    得到结果：-2147483648 </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMinInt</span><span class="params">()</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> &lt;&lt; <span class="number">31</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="判断一个数的奇偶性"><a href="#判断一个数的奇偶性" class="headerlink" title="判断一个数的奇偶性"></a>判断一个数的奇偶性</h4><p>判断奇偶性，实质是判断最后一位是否是1.<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    判断一个数的奇偶性.返回1，为奇数;返回0，为偶数 </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isOdd</span><span class="params">(<span class="keyword">int</span> num)</span>  </span><br><span class="line"></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> num &amp; <span class="number">1</span> == <span class="number">1</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="求一个数的绝对值"><a href="#求一个数的绝对值" class="headerlink" title="求一个数的绝对值"></a>求一个数的绝对值</h4><p>下面的方法实现的基础是将n右移31位，可以获得n的符号。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    取绝对值 </span><br><span class="line">    n右移31位，可以获得n的符号。若n为正数，得到0；若n为负数，得到 -1 </span><br><span class="line">     </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myAbs</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> (n ^ n &gt;&gt; <span class="number">31</span>) - (n &gt;&gt; <span class="number">31</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="求两个数的平均值"><a href="#求两个数的平均值" class="headerlink" title="求两个数的平均值"></a>求两个数的平均值</h4><p>第一种方法较为普遍且简单，不多说了。第二种方法，需要知道的是，<code>( m ^ n ) &gt;&gt; 1</code>得到的结果是m和n其中一个数的有些位为1的值的一半，<code>m &amp; n</code>得到的结果是m 和n都为1的那些位，两个结果相加得到m和n的平均数。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span><br><span class="line">    求m和n的平均数 </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getAverage</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">int</span> n)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> (m + n) &gt;&gt; <span class="number">1</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/* </span><br><span class="line">    求m和n的平均数 </span><br><span class="line">    (m ^ n) &gt;&gt; 1 -&gt; 获得m和n两个数中一个数的某些位为1的一半 </span><br><span class="line">    m &amp; n -&gt; 获得m和n两个数中都为1的某些位 </span><br><span class="line">*/</span>  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getAverage_2</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">int</span> n)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> ((m ^ n) &gt;&gt; <span class="number">1</span>) + (m &amp; n);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python   批量下载图片]]></title>
      <url>http://yoursite.com/2016/04/13/python-%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E5%9B%BE%E7%89%87/</url>
      <content type="html"><![CDATA[<p>首先我们先分析这个程序，这个程序的功能从网页批量下载图片，既然是网页下载，无非有这三个步骤：</p>
<ol>
<li>先得到网页。得到网页，以便程序分析网页中的图片连接。</li>
<li>解析网页。分析网页，从中取出所有图片连接。</li>
<li>下载。通过得到的图片连接下载图片。</li>
</ol>
<p>分析完成后我们开始编写程序：<br><a id="more"></a></p>
<h4 id="先得到网页"><a href="#先得到网页" class="headerlink" title="先得到网页"></a>先得到网页</h4><p>python自带<code>urllib</code>库，利用这个库我们可以轻松的得到网页。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">html = urllib.urlopen(<span class="string">"https://mm.taobao.com/1832304329.htm"</span>).read()</span><br></pre></td></tr></table></figure></p>
<p>这里有个要注意的地方:<code>编码问题</code> 我下的这个网页是<code>GBK</code>编码，所以要进行转换：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">html = html.decode(<span class="string">"GBK"</span>) <span class="comment"># decode 编码转换</span></span><br></pre></td></tr></table></figure></p>
<h4 id="解析网页"><a href="#解析网页" class="headerlink" title="解析网页"></a>解析网页</h4><p>接下来就是解析页面了，通过正则表达式可以很容易的到图片的连接，正则表达式在<code>re</code>库中我们导入它<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure></p>
<p>编译正则表达式:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg = re.compile(<span class="string">r'src="//(.*?)"/&gt;'</span>) <span class="comment"># 正则表达式 (编译正则表达式）</span></span><br></pre></td></tr></table></figure></p>
<p>解析网页：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imgurl = re.findall(reg, html)</span><br></pre></td></tr></table></figure></p>
<p>这样我们将所有的图片连接地址保存在了<code>imgurl</code>中了。</p>
<h4 id="下载网页中的图片并保存"><a href="#下载网页中的图片并保存" class="headerlink" title="下载网页中的图片并保存"></a>下载网页中的图片并保存</h4><p>利用切片得到图片的格式，将图片保存。图片连接格式：<code>img.alicdn.com/imgextra/i4/1832304329/TB1.9G9LVXXXXXeaXXXXXXXXXXX_!!0-tstar.jpg&quot;</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> imgurl:</span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"正在下载第%s张图片, 共%s张图片"</span> %(n, len(imgurl)) </span><br><span class="line">    urllib.urlretrieve(<span class="string">'http://%s'</span> %i, <span class="string">'%s.%s'</span> %(n, i[<span class="number">-3</span>:])) <span class="comment">#i[-3:]得到图片格式 并保存</span></span><br></pre></td></tr></table></figure>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src="http://7xsc1o.com1.z0.glb.clouddn.com/pythonpython%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E5%9B%BE%E7%89%87.png" alt="python批量下载图片"></p>
<h4 id="完整源码"><a href="#完整源码" class="headerlink" title="完整源码"></a>完整源码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">html = urllib.urlopen(<span class="string">"https://mm.taobao.com/1832304329.htm"</span>).read()</span><br><span class="line">html = html.decode(<span class="string">"GBK"</span>) <span class="comment"># decode and encode 学习  编码转换</span></span><br><span class="line"></span><br><span class="line">reg = re.compile(<span class="string">r'src="//(.*?)"/&gt;'</span>) <span class="comment"># 正则表达式 (编译正则表达式）</span></span><br><span class="line"></span><br><span class="line">imgurl = re.findall(reg, html)</span><br><span class="line"></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> imgurl:</span><br><span class="line">    n += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"正在下载第%s张图片, 共%s张图片"</span> %(n, len(imgurl))</span><br><span class="line">    urllib.urlretrieve(<span class="string">'http://%s'</span> %i, <span class="string">'%s.%s'</span> %(n, i[<span class="number">-3</span>:]))</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[安装libevent开发库]]></title>
      <url>http://yoursite.com/2016/03/28/%E5%AE%89%E8%A3%85libevent%E5%BC%80%E5%8F%91%E5%BA%93/</url>
      <content type="html"><![CDATA[<p>为了稳定性，我选 <code>2.0.21-stable</code> 版本。在安装中注意要以<code>root</code>用户身份运行。<br><a id="more"></a></p>
<h3 id="1-下载源码包"><a href="#1-下载源码包" class="headerlink" title="1.下载源码包"></a>1.下载源码包</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="javascript">https:<span class="comment">//codeload.github.com/nmathewson/Libevent/tar.gz/release-2.0.21-stable</span></span>`</span><br></pre></td></tr></table></figure>
<h3 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">Libevent-release-2</span><span class="selector-class">.0</span><span class="selector-class">.21-stable</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure>
<h3 id="3-配置安装路径"><a href="#3-配置安装路径" class="headerlink" title="3.配置安装路径"></a>3.配置安装路径</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Libevent-<span class="built_in">release</span><span class="number">-2.0</span><span class="number">.21</span>-stable/</span><br><span class="line">./configure -prefix=/usr</span><br></pre></td></tr></table></figure>
<h3 id="4-编译并安装"><a href="#4-编译并安装" class="headerlink" title="4.编译并安装"></a>4.编译并安装</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span></span><br><span class="line"><span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>
<h3 id="5-测试libevent是否安装成功"><a href="#5-测试libevent是否安装成功" class="headerlink" title="5.测试libevent是否安装成功"></a>5.测试libevent是否安装成功</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#ls -al <span class="regexp">/usr/</span>lib | <span class="keyword">grep</span> libevent</span><br></pre></td></tr></table></figure>
<p><img src="http://7xsc1o.com1.z0.glb.clouddn.com/programerlibevent%E5%AE%89%E8%A3%85%E6%B5%8B%E8%AF%95.PNG" class="thumbnail"></p>
<h3 id="6-说明"><a href="#6-说明" class="headerlink" title="6.说明"></a>6.说明</h3><p>如果编译后的程序提示找不到libvent的so，则创建库的链接和缓存文件<code>ldconfig</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开博——记录程序员的成长]]></title>
      <url>http://yoursite.com/2016/03/27/%E5%BC%80%E5%8D%9A%E2%80%94%E2%80%94%E8%AE%B0%E5%BD%95%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%88%90%E9%95%BF/</url>
      <content type="html"><![CDATA[<p>这是我开博的第一片博客，我久思冥想不知道该写些什么。人们对事情的开头总是寄托了自己美好的愿想，常言道“善始善终”，一个好的开头总是能给人看到希望，给人坚持走下去的动力。<br><a id="more"></a></p>
<p>人们眼中的程序员，往往是带着黑框眼镜、穿着蓝色牛仔、外加格子衬衫，整日埋头在电脑面前的，没有情感的‘机器’。只有程序员自己才能明白其实我们是有感情的，而且异常丰富。我们会为一个bug破口大骂，会为一个巧妙的算法惊呼，会为最终完成作品而感动流泪。程序员也是人，是充满感情的‘作家‘。</p>
<p>其实技术这条路，带来的不仅仅是技能上的提高，有时候更多的是给自己带来的成长，让自己更加稳重、成熟。越是在技术上钻研，越是发现机器下的世界和人们生活的世界是多么相似。人世间的纷纷扰扰在0和1的世界里同样存在，机器世界的制度规则在生活里同样上演。</p>
<p>以前自己的记录都写在本地上，虽然有过开博的想法，但总是因为各种各样的事情没有开成。可以说这次开博不容易。我希望在未来的日子了，将自己的技术领悟，人生随想都记录到这里，和大家一起学习，一起成长，共同见证一个程序员的岁月。</p>
]]></content>
    </entry>
    
  
  
</search>
